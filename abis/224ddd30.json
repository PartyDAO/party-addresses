[
  {
    "type": "constructor",
    "inputs": [
      {
        "name": "globals",
        "type": "address",
        "internalType": "contract IGlobals"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "receive",
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "IMPL",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "activateOrRefund",
    "inputs": [
      {
        "name": "contributor",
        "type": "address",
        "internalType": "address payable"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "allowedAuctionsMerkleRoot",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "approve",
    "inputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "pure"
  },
  {
    "type": "function",
    "name": "auctionId",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "balanceOf",
    "inputs": [
      {
        "name": "owner",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "numTokens",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "batchActivateOrRefund",
    "inputs": [
      {
        "name": "contributors",
        "type": "address[]",
        "internalType": "address payable[]"
      },
      {
        "name": "revertOnFailure",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "batchBurn",
    "inputs": [
      {
        "name": "contributors",
        "type": "address[]",
        "internalType": "address payable[]"
      },
      {
        "name": "revertOnFailure",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "batchContributeFor",
    "inputs": [
      {
        "name": "recipients",
        "type": "address[]",
        "internalType": "address[]"
      },
      {
        "name": "initialDelegates",
        "type": "address[]",
        "internalType": "address[]"
      },
      {
        "name": "values",
        "type": "uint96[]",
        "internalType": "uint96[]"
      },
      {
        "name": "gateDatas",
        "type": "bytes[]",
        "internalType": "bytes[]"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "bid",
    "inputs": [],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "bid",
    "inputs": [
      {
        "name": "amount",
        "type": "uint96",
        "internalType": "uint96"
      },
      {
        "name": "governanceOpts",
        "type": "tuple",
        "internalType": "struct Crowdfund.FixedGovernanceOpts",
        "components": [
          {
            "name": "partyImpl",
            "type": "address",
            "internalType": "contract Party"
          },
          {
            "name": "partyFactory",
            "type": "address",
            "internalType": "contract IPartyFactory"
          },
          {
            "name": "hosts",
            "type": "address[]",
            "internalType": "address[]"
          },
          {
            "name": "voteDuration",
            "type": "uint40",
            "internalType": "uint40"
          },
          {
            "name": "executionDelay",
            "type": "uint40",
            "internalType": "uint40"
          },
          {
            "name": "passThresholdBps",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "feeBps",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "feeRecipient",
            "type": "address",
            "internalType": "address payable"
          }
        ]
      },
      {
        "name": "proposalEngineOpts",
        "type": "tuple",
        "internalType": "struct ProposalStorage.ProposalEngineOpts",
        "components": [
          {
            "name": "enableAddAuthorityProposal",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "allowArbCallsToSpendPartyEth",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "allowOperators",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "distributionsConfig",
            "type": "uint8",
            "internalType": "enum ProposalStorage.DistributionsConfig"
          }
        ]
      },
      {
        "name": "hostIndex",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "bid",
    "inputs": [
      {
        "name": "governanceOpts",
        "type": "tuple",
        "internalType": "struct Crowdfund.FixedGovernanceOpts",
        "components": [
          {
            "name": "partyImpl",
            "type": "address",
            "internalType": "contract Party"
          },
          {
            "name": "partyFactory",
            "type": "address",
            "internalType": "contract IPartyFactory"
          },
          {
            "name": "hosts",
            "type": "address[]",
            "internalType": "address[]"
          },
          {
            "name": "voteDuration",
            "type": "uint40",
            "internalType": "uint40"
          },
          {
            "name": "executionDelay",
            "type": "uint40",
            "internalType": "uint40"
          },
          {
            "name": "passThresholdBps",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "feeBps",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "feeRecipient",
            "type": "address",
            "internalType": "address payable"
          }
        ]
      },
      {
        "name": "proposalEngineOpts",
        "type": "tuple",
        "internalType": "struct ProposalStorage.ProposalEngineOpts",
        "components": [
          {
            "name": "enableAddAuthorityProposal",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "allowArbCallsToSpendPartyEth",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "allowOperators",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "distributionsConfig",
            "type": "uint8",
            "internalType": "enum ProposalStorage.DistributionsConfig"
          }
        ]
      },
      {
        "name": "hostIndex",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "burn",
    "inputs": [
      {
        "name": "contributor",
        "type": "address",
        "internalType": "address payable"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "claim",
    "inputs": [
      {
        "name": "receiver",
        "type": "address",
        "internalType": "address payable"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "claims",
    "inputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "refund",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "governanceTokenId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "contractURI",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "string",
        "internalType": "string"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "contribute",
    "inputs": [
      {
        "name": "delegate",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "gateData",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "contributeFor",
    "inputs": [
      {
        "name": "recipient",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "initialDelegate",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "gateData",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "delegateCallAndRevert",
    "inputs": [
      {
        "name": "impl",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "callData",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "delegationsByContributor",
    "inputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "disableEmergencyExecute",
    "inputs": [
      {
        "name": "governanceOpts",
        "type": "tuple",
        "internalType": "struct Crowdfund.FixedGovernanceOpts",
        "components": [
          {
            "name": "partyImpl",
            "type": "address",
            "internalType": "contract Party"
          },
          {
            "name": "partyFactory",
            "type": "address",
            "internalType": "contract IPartyFactory"
          },
          {
            "name": "hosts",
            "type": "address[]",
            "internalType": "address[]"
          },
          {
            "name": "voteDuration",
            "type": "uint40",
            "internalType": "uint40"
          },
          {
            "name": "executionDelay",
            "type": "uint40",
            "internalType": "uint40"
          },
          {
            "name": "passThresholdBps",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "feeBps",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "feeRecipient",
            "type": "address",
            "internalType": "address payable"
          }
        ]
      },
      {
        "name": "proposalEngineOpts",
        "type": "tuple",
        "internalType": "struct ProposalStorage.ProposalEngineOpts",
        "components": [
          {
            "name": "enableAddAuthorityProposal",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "allowArbCallsToSpendPartyEth",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "allowOperators",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "distributionsConfig",
            "type": "uint8",
            "internalType": "enum ProposalStorage.DistributionsConfig"
          }
        ]
      },
      {
        "name": "hostIndex",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "emergencyExecute",
    "inputs": [
      {
        "name": "targetAddress",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "targetCallData",
        "type": "bytes",
        "internalType": "bytes"
      },
      {
        "name": "amountEth",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "emergencyExecuteDisabled",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "expiry",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint40",
        "internalType": "uint40"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "finalize",
    "inputs": [
      {
        "name": "governanceOpts",
        "type": "tuple",
        "internalType": "struct Crowdfund.FixedGovernanceOpts",
        "components": [
          {
            "name": "partyImpl",
            "type": "address",
            "internalType": "contract Party"
          },
          {
            "name": "partyFactory",
            "type": "address",
            "internalType": "contract IPartyFactory"
          },
          {
            "name": "hosts",
            "type": "address[]",
            "internalType": "address[]"
          },
          {
            "name": "voteDuration",
            "type": "uint40",
            "internalType": "uint40"
          },
          {
            "name": "executionDelay",
            "type": "uint40",
            "internalType": "uint40"
          },
          {
            "name": "passThresholdBps",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "feeBps",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "feeRecipient",
            "type": "address",
            "internalType": "address payable"
          }
        ]
      },
      {
        "name": "proposalEngineOpts",
        "type": "tuple",
        "internalType": "struct ProposalStorage.ProposalEngineOpts",
        "components": [
          {
            "name": "enableAddAuthorityProposal",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "allowArbCallsToSpendPartyEth",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "allowOperators",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "distributionsConfig",
            "type": "uint8",
            "internalType": "enum ProposalStorage.DistributionsConfig"
          }
        ]
      }
    ],
    "outputs": [
      {
        "name": "party_",
        "type": "address",
        "internalType": "contract Party"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "finalizeOrRollOver",
    "inputs": [
      {
        "name": "args",
        "type": "tuple",
        "internalType": "struct RollingAuctionCrowdfund.RollOverArgs",
        "components": [
          {
            "name": "nextNftTokenId",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "nextAuctionId",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "nextMaximumBid",
            "type": "uint96",
            "internalType": "uint96"
          },
          {
            "name": "proof",
            "type": "bytes32[]",
            "internalType": "bytes32[]"
          },
          {
            "name": "hostIndex",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      },
      {
        "name": "governanceOpts",
        "type": "tuple",
        "internalType": "struct Crowdfund.FixedGovernanceOpts",
        "components": [
          {
            "name": "partyImpl",
            "type": "address",
            "internalType": "contract Party"
          },
          {
            "name": "partyFactory",
            "type": "address",
            "internalType": "contract IPartyFactory"
          },
          {
            "name": "hosts",
            "type": "address[]",
            "internalType": "address[]"
          },
          {
            "name": "voteDuration",
            "type": "uint40",
            "internalType": "uint40"
          },
          {
            "name": "executionDelay",
            "type": "uint40",
            "internalType": "uint40"
          },
          {
            "name": "passThresholdBps",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "feeBps",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "feeRecipient",
            "type": "address",
            "internalType": "address payable"
          }
        ]
      },
      {
        "name": "proposalEngineOpts",
        "type": "tuple",
        "internalType": "struct ProposalStorage.ProposalEngineOpts",
        "components": [
          {
            "name": "enableAddAuthorityProposal",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "allowArbCallsToSpendPartyEth",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "allowOperators",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "distributionsConfig",
            "type": "uint8",
            "internalType": "enum ProposalStorage.DistributionsConfig"
          }
        ]
      }
    ],
    "outputs": [
      {
        "name": "party_",
        "type": "address",
        "internalType": "contract Party"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "gateKeeper",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "contract IGateKeeper"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "gateKeeperId",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "bytes12",
        "internalType": "bytes12"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getApproved",
    "inputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "pure"
  },
  {
    "type": "function",
    "name": "getContributorInfo",
    "inputs": [
      {
        "name": "contributor",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "ethContributed",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "ethUsed",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "ethOwed",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "votingPower",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getCrowdfundLifecycle",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint8",
        "internalType": "enum Crowdfund.CrowdfundLifecycle"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "implementation",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "initialize",
    "inputs": [
      {
        "name": "opts",
        "type": "tuple",
        "internalType": "struct AuctionCrowdfundBase.AuctionCrowdfundOptions",
        "components": [
          {
            "name": "name",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "symbol",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "customizationPresetId",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "auctionId",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "market",
            "type": "address",
            "internalType": "contract IMarketWrapper"
          },
          {
            "name": "nftContract",
            "type": "address",
            "internalType": "contract IERC721"
          },
          {
            "name": "nftTokenId",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "duration",
            "type": "uint40",
            "internalType": "uint40"
          },
          {
            "name": "maximumBid",
            "type": "uint96",
            "internalType": "uint96"
          },
          {
            "name": "splitRecipient",
            "type": "address",
            "internalType": "address payable"
          },
          {
            "name": "splitBps",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "initialContributor",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "initialDelegate",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "minContribution",
            "type": "uint96",
            "internalType": "uint96"
          },
          {
            "name": "maxContribution",
            "type": "uint96",
            "internalType": "uint96"
          },
          {
            "name": "gateKeeper",
            "type": "address",
            "internalType": "contract IGateKeeper"
          },
          {
            "name": "gateKeeperId",
            "type": "bytes12",
            "internalType": "bytes12"
          },
          {
            "name": "onlyHostCanBid",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "governanceOpts",
            "type": "tuple",
            "internalType": "struct Crowdfund.FixedGovernanceOpts",
            "components": [
              {
                "name": "partyImpl",
                "type": "address",
                "internalType": "contract Party"
              },
              {
                "name": "partyFactory",
                "type": "address",
                "internalType": "contract IPartyFactory"
              },
              {
                "name": "hosts",
                "type": "address[]",
                "internalType": "address[]"
              },
              {
                "name": "voteDuration",
                "type": "uint40",
                "internalType": "uint40"
              },
              {
                "name": "executionDelay",
                "type": "uint40",
                "internalType": "uint40"
              },
              {
                "name": "passThresholdBps",
                "type": "uint16",
                "internalType": "uint16"
              },
              {
                "name": "feeBps",
                "type": "uint16",
                "internalType": "uint16"
              },
              {
                "name": "feeRecipient",
                "type": "address",
                "internalType": "address payable"
              }
            ]
          },
          {
            "name": "proposalEngineOpts",
            "type": "tuple",
            "internalType": "struct ProposalStorage.ProposalEngineOpts",
            "components": [
              {
                "name": "enableAddAuthorityProposal",
                "type": "bool",
                "internalType": "bool"
              },
              {
                "name": "allowArbCallsToSpendPartyEth",
                "type": "bool",
                "internalType": "bool"
              },
              {
                "name": "allowOperators",
                "type": "bool",
                "internalType": "bool"
              },
              {
                "name": "distributionsConfig",
                "type": "uint8",
                "internalType": "enum ProposalStorage.DistributionsConfig"
              }
            ]
          }
        ]
      },
      {
        "name": "allowedAuctionsMerkleRoot_",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "initialized",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "isApprovedForAll",
    "inputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "pure"
  },
  {
    "type": "function",
    "name": "lastBid",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint96",
        "internalType": "uint96"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "market",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "contract IMarketWrapper"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "maxContribution",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint96",
        "internalType": "uint96"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "maximumBid",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint96",
        "internalType": "uint96"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "minContribution",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint96",
        "internalType": "uint96"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "name",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "string",
        "internalType": "string"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "nftContract",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "contract IERC721"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "nftTokenId",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "onERC721Received",
    "inputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bytes4",
        "internalType": "bytes4"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "onlyHostCanBid",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "ownerOf",
    "inputs": [
      {
        "name": "tokenId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "owner",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "party",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "contract Party"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "partyOptsHash",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "safeTransferFrom",
    "inputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "pure"
  },
  {
    "type": "function",
    "name": "safeTransferFrom",
    "inputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "stateMutability": "pure"
  },
  {
    "type": "function",
    "name": "setApprovalForAll",
    "inputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "outputs": [],
    "stateMutability": "pure"
  },
  {
    "type": "function",
    "name": "splitBps",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint16",
        "internalType": "uint16"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "splitRecipient",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address payable"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "supportsInterface",
    "inputs": [
      {
        "name": "interfaceId",
        "type": "bytes4",
        "internalType": "bytes4"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "pure"
  },
  {
    "type": "function",
    "name": "symbol",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "string",
        "internalType": "string"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "tokenURI",
    "inputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "string",
        "internalType": "string"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "totalContributions",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint96",
        "internalType": "uint96"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "transferFrom",
    "inputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "pure"
  },
  {
    "type": "event",
    "name": "Approval",
    "inputs": [
      {
        "name": "owner",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "operator",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "tokenId",
        "type": "uint256",
        "indexed": true,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "ApprovalForAll",
    "inputs": [
      {
        "name": "owner",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "operator",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "approved",
        "type": "bool",
        "indexed": false,
        "internalType": "bool"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "AuctionUpdated",
    "inputs": [
      {
        "name": "nextNftTokenId",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "nextAuctionId",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "nextMaximumBid",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "BatchMetadataUpdate",
    "inputs": [
      {
        "name": "_fromTokenId",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "_toTokenId",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Bid",
    "inputs": [
      {
        "name": "bidAmount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Burned",
    "inputs": [
      {
        "name": "contributor",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "ethUsed",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "ethOwed",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "votingPower",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Contributed",
    "inputs": [
      {
        "name": "sender",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "contributor",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "delegate",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "previousTotalContributions",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "EmergencyExecute",
    "inputs": [
      {
        "name": "target",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "data",
        "type": "bytes",
        "indexed": false,
        "internalType": "bytes"
      },
      {
        "name": "amountEth",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "EmergencyExecuteDisabled",
    "inputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Initialized",
    "inputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Lost",
    "inputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "MetadataUpdate",
    "inputs": [
      {
        "name": "_tokenId",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Transfer",
    "inputs": [
      {
        "name": "owner",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "to",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "tokenId",
        "type": "uint256",
        "indexed": true,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Won",
    "inputs": [
      {
        "name": "bid",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "party",
        "type": "address",
        "indexed": false,
        "internalType": "contract Party"
      }
    ],
    "anonymous": false
  },
  {
    "type": "error",
    "name": "AboveMaximumContributionsError",
    "inputs": [
      {
        "name": "contributions",
        "type": "uint96",
        "internalType": "uint96"
      },
      {
        "name": "maxContributions",
        "type": "uint96",
        "internalType": "uint96"
      }
    ]
  },
  {
    "type": "error",
    "name": "AlreadyBurnedError",
    "inputs": [
      {
        "name": "owner",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "tokenId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ]
  },
  {
    "type": "error",
    "name": "AlreadyHighestBidderError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "AlreadyInitialized",
    "inputs": []
  },
  {
    "type": "error",
    "name": "AlreadyMintedError",
    "inputs": [
      {
        "name": "owner",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "tokenId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ]
  },
  {
    "type": "error",
    "name": "ArityMismatch",
    "inputs": []
  },
  {
    "type": "error",
    "name": "AuctionFinalizedError",
    "inputs": [
      {
        "name": "auctionId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ]
  },
  {
    "type": "error",
    "name": "AuctionNotExpiredError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "BadNextAuctionError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "BelowMinimumContributionsError",
    "inputs": [
      {
        "name": "contributions",
        "type": "uint96",
        "internalType": "uint96"
      },
      {
        "name": "minContributions",
        "type": "uint96",
        "internalType": "uint96"
      }
    ]
  },
  {
    "type": "error",
    "name": "EthTransferFailed",
    "inputs": [
      {
        "name": "receiver",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "errData",
        "type": "bytes",
        "internalType": "bytes"
      }
    ]
  },
  {
    "type": "error",
    "name": "ExceedsMaximumBidError",
    "inputs": [
      {
        "name": "bidAmount",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "maximumBid",
        "type": "uint256",
        "internalType": "uint256"
      }
    ]
  },
  {
    "type": "error",
    "name": "ExceedsTotalContributionsError",
    "inputs": [
      {
        "name": "value",
        "type": "uint96",
        "internalType": "uint96"
      },
      {
        "name": "totalContributions",
        "type": "uint96",
        "internalType": "uint96"
      }
    ]
  },
  {
    "type": "error",
    "name": "InvalidAddressError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidAuctionIdError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidBpsError",
    "inputs": [
      {
        "name": "bps",
        "type": "uint16",
        "internalType": "uint16"
      }
    ]
  },
  {
    "type": "error",
    "name": "InvalidContributorError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidDelegateError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidGovernanceOptionsError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidMessageValue",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidTokenError",
    "inputs": [
      {
        "name": "tokenId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ]
  },
  {
    "type": "error",
    "name": "MinimumBidExceedsMaximumBidError",
    "inputs": [
      {
        "name": "bidAmount",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "maximumBid",
        "type": "uint256",
        "internalType": "uint256"
      }
    ]
  },
  {
    "type": "error",
    "name": "MissingHostsError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "NoContributionsError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "NoPartyError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "NotAllowedByGateKeeperError",
    "inputs": [
      {
        "name": "contributor",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "gateKeeper",
        "type": "address",
        "internalType": "contract IGateKeeper"
      },
      {
        "name": "gateKeeperId",
        "type": "bytes12",
        "internalType": "bytes12"
      },
      {
        "name": "gateData",
        "type": "bytes",
        "internalType": "bytes"
      }
    ]
  },
  {
    "type": "error",
    "name": "NothingToClaimError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "OnlyContributorError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "OnlyDelegateCallError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "OnlyPartyDaoError",
    "inputs": [
      {
        "name": "notDao",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "OnlyPartyDaoOrHostError",
    "inputs": [
      {
        "name": "notDao",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "OnlyPartyHostError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "OnlyWhenEmergencyActionsAllowedError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "PartyAlreadyExistsError",
    "inputs": [
      {
        "name": "party",
        "type": "address",
        "internalType": "contract Party"
      }
    ]
  },
  {
    "type": "error",
    "name": "SplitRecipientAlreadyBurnedError",
    "inputs": []
  },
  {
    "type": "error",
    "name": "Uint256ToUint40CastOutOfRangeError",
    "inputs": [
      {
        "name": "u256",
        "type": "uint256",
        "internalType": "uint256"
      }
    ]
  },
  {
    "type": "error",
    "name": "Uint256ToUint96CastOutOfRange",
    "inputs": [
      {
        "name": "v",
        "type": "uint256",
        "internalType": "uint256"
      }
    ]
  },
  {
    "type": "error",
    "name": "WrongLifecycleError",
    "inputs": [
      {
        "name": "lc",
        "type": "uint8",
        "internalType": "enum Crowdfund.CrowdfundLifecycle"
      }
    ]
  }
]
